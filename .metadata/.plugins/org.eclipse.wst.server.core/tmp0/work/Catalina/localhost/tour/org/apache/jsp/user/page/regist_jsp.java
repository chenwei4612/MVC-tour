/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-03-10 02:26:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class regist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head lang=\"en\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>注册页面</title>\r\n");
      out.write("<link href=\"../css/header.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"../css/footer.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"../css/animate.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"../css/login.css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!--模态框-->\r\n");
      out.write("\t<div class=\"modal\">\r\n");
      out.write("\t\t<div class=\"modal_header\">提示信息</div>\r\n");
      out.write("\t\t<div class=\"modal_content\">恭喜您已成功注册！</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 页面顶部-->\r\n");
      out.write("\t<header id=\"top\">\r\n");
      out.write("\t\t<div class=\"top\">\r\n");
      out.write("\t\t\t<img src=\"../img/header/logo.png\" alt=\"\" /> <span>欢迎注册</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<div class=\"parent\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"panel rt\">\r\n");
      out.write("\t\t\t\t<form id=\"fm-register\" method=\"post\" action=\"userRegistServlet\">\r\n");
      out.write("\t\t\t\t\t<div class=\"txt\">\r\n");
      out.write("\t\t\t\t\t\t<p id=\"newuser\">\r\n");
      out.write("\t\t\t\t\t\t\t新用户注册 <span> <a href=\"login.jsp\" id=\"dlogin\">直接登录</a> </span>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"uname\">用户名：</label> <input autocomplete required\r\n");
      out.write("\t\t\t\t\t\t\tminlength=\"6\" maxlength=\"9\" type=\"text\" placeholder=\"请输入用户名\"\r\n");
      out.write("\t\t\t\t\t\t\tautofocus name=\"uname\" id=\"uname\" /> <span class=\"msg-default\">用户名长度在6到9位之间</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"upwd\">登录密码：</label> <input required type=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\tminlength=\"6\" maxlength=\"12\" placeholder=\"请输入密码\" name=\"upwd\"\r\n");
      out.write("\t\t\t\t\t\t\tautofocus id=\"upwd\" /> <span class=\"msg-default hidden\">密码长度在6到12位之间</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"email\">邮箱：</label> <input autocomplete required\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"email\" placeholder=\"请输入邮箱地址\" name=\"email\" id=\"email\" /> <span\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"msg-default hidden\">请输入合法的邮箱地址</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"phone\">手机号：</label> <input id=\"phone\" name=\"phone\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"请输入您的手机号\"\r\n");
      out.write("\t\t\t\t\t\t\tpattern=\"(\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$\"\r\n");
      out.write("\t\t\t\t\t\t\trequired type=\"text\" /> <span class=\"msg-default hidden\">请输入合法的手机号</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label></label> <input type=\"button\" value=\"提交注册信息\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"bt-register\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script src=\"../js/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("  $('#bt-register').click(function(){\r\n");
      out.write("    var lengths=0;\r\n");
      out.write("    $('.form-group').each(function(){\r\n");
      out.write("      if($(this).find('span').hasClass('msg-success')){\r\n");
      out.write("        lengths++;\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("    if(lengths==4){\r\n");
      out.write("    \t$('.modal').fadeIn();\r\n");
      out.write("    \tsetTimeout(function(){\r\n");
      out.write("    \t\t$('#fm-register').submit();\r\n");
      out.write("    \t},2000);\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("\t<script>\r\n");
      out.write("  /*1.对用户名进行验证*/\r\n");
      out.write("  $('#uname').blur(function(){\r\n");
      out.write("    if(this.validity.valueMissing){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '用户名不能为空';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('用户名不能为空');\r\n");
      out.write("    }else if(this.validity.tooShort){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '用户名不能少于6位';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('用户名不能少于6位');\r\n");
      out.write("    }else {\r\n");
      out.write("      this.nextElementSibling.innerHTML = '用户名格式正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-success';\r\n");
      out.write("      this.setCustomValidity('');\r\n");
      out.write("      var data = $(\"#uname\").val();\r\n");
      out.write("      if(!data){   //用户没有输入任何内容\r\n");
      out.write("        return;\r\n");
      out.write("      }\r\n");
      out.write("      /*发起异步请求，询问服务器用户名是否已经存在*/\r\n");
      out.write("      $.ajax({\r\n");
      out.write("\t\t  type:'post',\r\n");
      out.write("\t\t  data:'uname='+data,\r\n");
      out.write("\t\t  url:'/tour/user/page/userCheckUnameServlet',\r\n");
      out.write("\t\t  success:function(data){\r\n");
      out.write("\t          if(data=='yes'){\r\n");
      out.write("\t            $(\"#uname\").next().removeClass().addClass(\"msg-error\");\r\n");
      out.write("\t          \t$(\"#uname\").next().text('该用户已被占用');\r\n");
      out.write("\t          }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  });\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  $('#uname').focus(function(){\r\n");
      out.write("    this.nextElementSibling.innerHTML = '用户名长度在6到9位之间';\r\n");
      out.write("    this.nextElementSibling.className = 'msg-default';\r\n");
      out.write("  });\r\n");
      out.write("  /*2.对密码进行验证*/\r\n");
      out.write("  $('#upwd').blur(function(){\r\n");
      out.write("    if(this.validity.valueMissing){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '密码不能为空';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('密码不能为空');\r\n");
      out.write("    }else if(this.validity.tooShort){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '密码长度在尽量别少于6位';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('密码长度在尽量别少于6位');\r\n");
      out.write("    }else {\r\n");
      out.write("      this.nextElementSibling.innerHTML = '密码格式正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-success';\r\n");
      out.write("      this.setCustomValidity('');\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  $('#upwd').focus(function(){\r\n");
      out.write("    this.nextElementSibling.innerHTML = '密码长度在6到12位之间';\r\n");
      out.write("    this.nextElementSibling.className = 'msg-default';\r\n");
      out.write("  });\r\n");
      out.write("  /*3.对邮箱地址进行验证*/\r\n");
      out.write("  $('#email').blur(function(){\r\n");
      out.write("    if(this.validity.valueMissing){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '邮箱不能为空';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('邮箱不能为空');\r\n");
      out.write("    }else if(this.validity.typeMismatch){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '邮箱格式不正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('邮箱格式不正确');\r\n");
      out.write("    }else {\r\n");
      out.write("      this.nextElementSibling.innerHTML = '邮箱格式正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-success';\r\n");
      out.write("      this.setCustomValidity('');\r\n");
      out.write("      var data = $(\"#email\").val();\r\n");
      out.write("      if(!data){   //用户没有输入任何内容\r\n");
      out.write("        return;\r\n");
      out.write("      }\r\n");
      out.write("      /*发起异步请求，询问服务器邮箱是否已经存在*/\r\n");
      out.write("      $.ajax({\r\n");
      out.write("\t\t  type:'post',\r\n");
      out.write("\t\t  data:'email='+data,\r\n");
      out.write("\t\t  url:'/tour/user/page/userCheckEmailServlet',\r\n");
      out.write("\t\t  success:function(data){\r\n");
      out.write("\t          console.log('开始处理响应数据')\r\n");
      out.write("\t          if(data=='yes'){\r\n");
      out.write("\t        \t $(\"#email\").next().removeClass().addClass(\"msg-error\");\r\n");
      out.write("\t        \t $(\"#email\").next().text('该邮箱地址已被占用了');\r\n");
      out.write("\t          }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  });\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  $('#email').focus(function(){\r\n");
      out.write("    this.nextElementSibling.innerHTML = '请输入合法的邮箱地址';\r\n");
      out.write("    this.nextElementSibling.className = 'msg-default';\r\n");
      out.write("  });\r\n");
      out.write("  /*4.对手机号进行验证*/\r\n");
      out.write("  $('#phone').blur(function(){\r\n");
      out.write("    if(this.validity.valueMissing){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '手机号不能为空';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('手机号不能为空');\r\n");
      out.write("    }else if(this.validity.patternMismatch){\r\n");
      out.write("      this.nextElementSibling.innerHTML = '手机号格式不正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-error';\r\n");
      out.write("      this.setCustomValidity('手机号格式不正确');\r\n");
      out.write("    }else {\r\n");
      out.write("      this.nextElementSibling.innerHTML = '手机号格式正确';\r\n");
      out.write("      this.nextElementSibling.className = 'msg-success';\r\n");
      out.write("      this.setCustomValidity('');\r\n");
      out.write("      var data = $(\"#phone\").val();\r\n");
      out.write("      if(!data){   //用户没有输入任何内容\r\n");
      out.write("        return;\r\n");
      out.write("      }\r\n");
      out.write("      /*发起异步请求，询问服务器手机号是否已经存在*/\r\n");
      out.write("      $.ajax({\r\n");
      out.write("\t\t  type:'post',\r\n");
      out.write("\t\t  data:'phone='+data,\r\n");
      out.write("\t\t  url:'/tour/user/page/userCheckPhoneServlet',\r\n");
      out.write("\t\t  success:function(data){\r\n");
      out.write("\t          console.log('开始处理响应数据');\r\n");
      out.write("\t          // alert(\"*\"+data+\"*\");\r\n");
      out.write("\t          if(data=='yes'){\r\n");
      out.write("\t        \t  $(\"#phone\").next().removeClass().addClass(\"msg-error\");\r\n");
      out.write("\t        \t  $(\"#phone\").next().text('该手机号已被占用了');\r\n");
      out.write("\t          }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  });\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  $('#phone').focus(function(){\r\n");
      out.write("    this.nextElementSibling.innerHTML = '请输入合法的手机号';\r\n");
      out.write("    this.nextElementSibling.className = 'msg-default';\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"foot_box\">\r\n");
      out.write("    <div class=\"icon1 lf\">\r\n");
      out.write("        <img src=\"../img/footer/icon1.png\" alt=\"\"/>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"icon2 lf\">\r\n");
      out.write("        <img src=\"../img/footer/icon2.png\" alt=\"\"/>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"icon3 lf\">\r\n");
      out.write("        <img src=\"../img/footer/icon3.png\" alt=\"\"/>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"icon4 lf\">\r\n");
      out.write("        <img src=\"../img/footer/icon4.png\" alt=\"\"/>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
